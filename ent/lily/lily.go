// Code generated by entc, DO NOT EDIT.

package lily

import (
	"study-event-go/types"
	"time"
)

const (
	// Label holds the string label denoting the lily type in the database.
	Label = "lily"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldDeletionReason holds the string denoting the deletion_reason field in the database.
	FieldDeletionReason = "deletion_reason"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldMiddleName holds the string denoting the middle_name field in the database.
	FieldMiddleName = "middle_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldRank holds the string denoting the rank field in the database.
	FieldRank = "rank"
	// FieldMainCharmID holds the string denoting the main_charm_id field in the database.
	FieldMainCharmID = "main_charm_id"
	// FieldSubCharmID holds the string denoting the sub_charm_id field in the database.
	FieldSubCharmID = "sub_charm_id"
	// FieldGardenID holds the string denoting the garden_id field in the database.
	FieldGardenID = "garden_id"
	// FieldLegionID holds the string denoting the legion_id field in the database.
	FieldLegionID = "legion_id"
	// Table holds the table name of the lily in the database.
	Table = "lilies"
)

// Columns holds all SQL columns for lily fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldDeletionReason,
	FieldFirstName,
	FieldMiddleName,
	FieldLastName,
	FieldRank,
	FieldMainCharmID,
	FieldSubCharmID,
	FieldGardenID,
	FieldLegionID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeletionReason holds the default value on creation for the "deletion_reason" field.
	DefaultDeletionReason types.DeletionReason
	// FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	FirstNameValidator func(string) error
	// LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	LastNameValidator func(string) error
	// DefaultRank holds the default value on creation for the "rank" field.
	DefaultRank uint32
	// DefaultMainCharmID holds the default value on creation for the "main_charm_id" field.
	DefaultMainCharmID types.CharmID
	// DefaultSubCharmID holds the default value on creation for the "sub_charm_id" field.
	DefaultSubCharmID types.CharmID
	// DefaultGardenID holds the default value on creation for the "garden_id" field.
	DefaultGardenID types.GardenID
	// DefaultLegionID holds the default value on creation for the "legion_id" field.
	DefaultLegionID types.LegionID
)
